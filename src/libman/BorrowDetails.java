/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package libman;

/**
 *
 * @author rahul
 */
public class BorrowDetails extends javax.swing.JFrame {

    /**
     * Creates new form BorrowDetails
     */
    public BorrowDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        tableScroll = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        printButton = new javax.swing.JButton();
	viewToggleButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backButton.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        backButton.setText("<");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("     Books Status");
        
        isViewAllBooks = false;
        if(isViewAllBooks)
        	viewToggleButton.setText("All Books");
        else
        	viewToggleButton.setText("Issued Books");
        viewToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewToggleButtonActionPerformed(evt);
            }
        });

        issuedBooksTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AccNo", "Title", "Student RegNo", "Student Name", "Class", "Return Date", "Overdue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        
        allBooksTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AccNo", "Title", "Author", "Publisher", "Price", "Domain"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        
        if(isViewAllBooks)
		table.setModel(allBooksTableModel);
	else
		table.setModel(issuedBooksTableModel);
        tableScroll.setViewportView(table);

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableScroll)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(325, 325, 325))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(tableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
	setLocationRelativeTo(null);
	if(isViewAllBooks)
		populateTable("allBooksTableModel");
	else
		populateTable("issuedBooksTableModel");
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
	setVisible(false);
	dispose();
	MainUI.main(null);
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewToggleButtonActionPerformed
	isViewAllBooks = !(isViewAllBooks);

	if(isViewAllBooks) {
		viewToggleButton.setText("All Books");
		populateTable("allBooksTableModel");
		table.setModel(allBooksTableModel);
	}

	else {
		viewToggleButton.setText("Issued Books");
		populateTable("issuedBooksTableModel");
		table.setModel(issuedBooksTableModel);
	}
    }//GEN-LAST:event_viewToggleButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
	try {
		table.print();
	} catch(java.awt.print.PrinterException e) {
		e.printStackTrace();
	}
    }//GEN-LAST:event_printButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
		util.setLookAndFeel();
        } catch (Exception e) {
		e.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowDetails().setVisible(true);
            }
        });
    }

    private void populateTable(String tableModelChoice) {
    	if(tableModelChoice.equals("allBooksTableModel")) {
		String[] accNo = util.SQLQuery("Library","SELECT AccNo FROM BookDetails");
		String[] bookTitle = util.SQLQuery("Library","SELECT Title FROM BookDetails");
		String[] bookPublisher = util.SQLQuery("Library","SELECT Publisher FROM BookDetails");
		String[] bookPrice = util.SQLQuery("Library","SELECT Price FROM BookDetails");
		String[] bookDomain = util.SQLQuery("Library","SELECT Domain FROM BookDetails");

		allBooksTableModel.setRowCount(0);
		for(int i = 0; i < accNo.length; i++) {
			String[] bookAuthor = util.SQLQuery("Library","SELECT AuthorName FROM Author JOIN BookDetails ON Author.AccNo=BookDetails.AccNo WHERE Author.AccNo='"+accNo[i]+"'");
			String allAuthors = "";
			for(int j = 0; j < bookAuthor.length; j++) {
				if(j > 0)
					allAuthors += " ";
				allAuthors += bookAuthor[j];
				if(j < bookAuthor.length-1)
					allAuthors += ",";
			}
			String[] row = new String[] {
				accNo[i], bookTitle[i], allAuthors, bookPublisher[i], bookPrice[i], bookDomain[i]
			};
			allBooksTableModel.addRow(row);
		}
	}

	if(tableModelChoice.equals("issuedBooksTableModel")) {
		String[] accNo = util.SQLQuery("Library","SELECT AccNo FROM Borrowed");
		String[] bookTitle = util.SQLQuery("Library","SELECT Title FROM BookDetails JOIN Borrowed ON BookDetails.AccNo=Borrowed.AccNo");
		String[] idNo = util.SQLQuery("Library","SELECT MemberId FROM Borrowed");
		String[] studentName = util.SQLQuery("Library","SELECT Name FROM Borrowed");
		String[] className = util.SQLQuery("Library","SELECT Class FROM Borrowed");
		String[] borrowDate = util.SQLQuery("Library","SELECT DateBorrowed FROM Borrowed");

		issuedBooksTableModel.setRowCount(0);
		for(int i = 0; i < accNo.length; i++) {
			String returnDate = util.getDate(borrowDate[i], Integer.parseInt(util.getServerData("Borrowal Period")));
        	        String overdue = "no";
        	        if(util.getDate().compareTo(returnDate)>0)
        	                overdue = "yes";
			String[] row = new String[] { 
				accNo[i], bookTitle[i], idNo[i], studentName[i], className[i], returnDate, overdue
			};
			issuedBooksTableModel.addRow(row);
		}
	}

	if(isViewAllBooks)
		table.setModel(allBooksTableModel);
	else
		table.setModel(issuedBooksTableModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton printButton;
    private javax.swing.table.DefaultTableModel issuedBooksTableModel;
    private javax.swing.table.DefaultTableModel allBooksTableModel;
    private javax.swing.JToggleButton viewToggleButton;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JLabel title;
    private boolean isViewAllBooks;
    // End of variables declaration//GEN-END:variables
}
